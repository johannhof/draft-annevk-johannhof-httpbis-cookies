{
  "magic": "E!vIA5L86J2I",
  "timestamp": "2025-01-09T00:22:46.125264+00:00",
  "repo": "johannhof/draft-annevk-johannhof-httpbis-cookies",
  "labels": [
    {
      "name": "bug",
      "description": "Something isn't working",
      "color": "d73a4a"
    },
    {
      "name": "documentation",
      "description": "Improvements or additions to documentation",
      "color": "0075ca"
    },
    {
      "name": "duplicate",
      "description": "This issue or pull request already exists",
      "color": "cfd3d7"
    },
    {
      "name": "enhancement",
      "description": "New feature or request",
      "color": "a2eeef"
    },
    {
      "name": "good first issue",
      "description": "Good for newcomers",
      "color": "7057ff"
    },
    {
      "name": "help wanted",
      "description": "Extra attention is needed",
      "color": "008672"
    },
    {
      "name": "invalid",
      "description": "This doesn't seem right",
      "color": "e4e669"
    },
    {
      "name": "question",
      "description": "Further information is requested",
      "color": "d876e3"
    },
    {
      "name": "wontfix",
      "description": "This will not be worked on",
      "color": "ffffff"
    }
  ],
  "issues": [
    {
      "number": 2,
      "id": "I_kwDOL8YrcM6NO1ca",
      "title": "Broken ABNF in S5.3.1",
      "url": "https://github.com/johannhof/draft-annevk-johannhof-httpbis-cookies/issues/2",
      "state": "CLOSED",
      "author": "martinthomson",
      "authorAssociation": "NONE",
      "assignees": [
        "annevk"
      ],
      "labels": [],
      "body": "https://johannhof.github.io/draft-annevk-johannhof-httpbis-cookies/draft-annevk-johannhof-httpbis-cookies.html#section-5.3.1",
      "createdAt": "2024-06-24T07:37:22Z",
      "updatedAt": "2024-07-18T11:57:50Z",
      "closedAt": "2024-07-18T11:57:50Z",
      "comments": [
        {
          "author": "annevk",
          "authorAssociation": "COLLABORATOR",
          "body": "Found a single-space fix: #7. Markdown magic. \ud83c\udf89 ",
          "createdAt": "2024-07-18T11:42:41Z",
          "updatedAt": "2024-07-18T11:42:41Z"
        }
      ]
    },
    {
      "number": 3,
      "id": "I_kwDOL8YrcM6POztp",
      "title": "Cookie Store API events integration",
      "url": "https://github.com/johannhof/draft-annevk-johannhof-httpbis-cookies/issues/3",
      "state": "OPEN",
      "author": "annevk",
      "authorAssociation": "COLLABORATOR",
      "assignees": [
        "annevk"
      ],
      "labels": [],
      "body": "https://johannhof.github.io/draft-annevk-johannhof-httpbis-cookies/draft-annevk-johannhof-httpbis-cookies.html is currently lacking in that it doesn't support events.\r\n\r\nNow we don't want the I-D to have to deal with events or callbacks. So Johann and I came up with this scheme:\r\n\r\n- Store a Cookie will no longer call the cookie removal algorithms (expiry and excess) at the end. Instead callers of Store a Cookie will be responsible for that.\r\n- We will no longer call the expiry or excess algorithms directly in the I-D, except for non-browser user agents. For browser user agents we will detail when to call them in a web platform specification as that will enable us to dispatch events at the same time. We will still make the I-D require that web platform specifications call them, just to make it clear that the requirements are roughly the same, just that the layering is allowed to be different.\r\n- Store a Cookie will return the cookie that was changed or null.\r\n- Remove Expired Cookies will return a list of removed cookies (potentially empty).\r\n- Remove Excess Cookies for a Host will return a list of removed cookies  (potentially empty).\r\n- Remove Global Excess Cookies will return a list of removed cookies  (potentially empty).\r\n- The web platform specifications calling the above algorithms will have to deduplicate the information in the returned lists (using a map most likely, see last bullet point of https://github.com/WICG/cookie-store/issues/230#issuecomment-2143035238) and will also have to distribute the changes across the impacted origins. This unfortunately requires the calling specification to be aware of how cookies are keyed as well, but so be it?\r\n\r\nThe current Cookie Store API seems to hand-wave a lot of the complexity away, but we hope to improve on that by making it all a bit more grounded. E.g., one of the things that is currently unclear is how the cookie changes are distributed across the various global environments of different origins.",
      "createdAt": "2024-07-11T12:10:37Z",
      "updatedAt": "2024-07-18T08:40:38Z",
      "closedAt": null,
      "comments": [
        {
          "author": "annevk",
          "authorAssociation": "COLLABORATOR",
          "body": "One particular interesting case of this is that Store a Cookie will be followed by a call to Remove Expired Cookies and these might both return the same cookie (meaning it was stored with an expiry-time in the past). The caller will have to deduplicate this into a single removed cookie to be reported through a change event.",
          "createdAt": "2024-07-18T08:40:37Z",
          "updatedAt": "2024-07-18T08:40:37Z"
        }
      ]
    },
    {
      "number": 4,
      "id": "I_kwDOL8YrcM6PO02e",
      "title": "Specify partitioning",
      "url": "https://github.com/johannhof/draft-annevk-johannhof-httpbis-cookies/issues/4",
      "state": "OPEN",
      "author": "johannhof",
      "authorAssociation": "OWNER",
      "assignees": [
        "johannhof"
      ],
      "labels": [],
      "body": "This was left out of the initial spec draft, though we laid the groundwork for it.",
      "createdAt": "2024-07-11T12:12:58Z",
      "updatedAt": "2024-07-11T12:12:59Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 5,
      "id": "I_kwDOL8YrcM6PXeUD",
      "title": "Provide integration with Clear-Site-Data",
      "url": "https://github.com/johannhof/draft-annevk-johannhof-httpbis-cookies/issues/5",
      "state": "OPEN",
      "author": "annevk",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Based on https://w3c.github.io/webappsec-clear-site-data/#clear-cookies it looks like we need to be able to delete cookies given a registrable domain.\r\n\r\nIt's not entirely clear how Clear-Site-Data integrates with partitioning though so it is likely more subtle than that: https://github.com/w3c/webappsec-clear-site-data/issues/72.\r\n\r\nThere's also some concerns about how this works in general, seemingly without resolution: https://github.com/w3c/webappsec-clear-site-data/issues/55.",
      "createdAt": "2024-07-12T10:50:36Z",
      "updatedAt": "2024-07-18T08:17:12Z",
      "closedAt": null,
      "comments": [
        {
          "author": "annevk",
          "authorAssociation": "COLLABORATOR",
          "body": "Make sure this also works for https://github.com/privacycg/nav-tracking-mitigations. See discussion in https://github.com/privacycg/nav-tracking-mitigations/pull/78 for context.",
          "createdAt": "2024-07-18T08:17:10Z",
          "updatedAt": "2024-07-18T08:17:10Z"
        }
      ]
    },
    {
      "number": 6,
      "id": "I_kwDOL8YrcM6P_fTJ",
      "title": "Web Platform Tests",
      "url": "https://github.com/johannhof/draft-annevk-johannhof-httpbis-cookies/issues/6",
      "state": "OPEN",
      "author": "johannhof",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "We need to write some more WPT's to ensure we correctly specify what's happening in browsers today. Let's keep a list here. Please add a comment for any tests you'd like to see added.\r\n\r\n- [ ] Cookie Store: What happens for multiple Set-Cookie headers? Do they send individual cookie change events, or do they coalesce them into just the latest change?\r\n- [ ] TODO: Figure out SAA / 3PC blocking tests to write",
      "createdAt": "2024-07-18T08:58:58Z",
      "updatedAt": "2024-07-18T08:58:58Z",
      "closedAt": null,
      "comments": []
    },
    {
      "number": 8,
      "id": "I_kwDOL8YrcM6X76XT",
      "title": "Cookie Lifetime Limits",
      "url": "https://github.com/johannhof/draft-annevk-johannhof-httpbis-cookies/issues/8",
      "state": "CLOSED",
      "author": "arichiv",
      "authorAssociation": "NONE",
      "assignees": [],
      "labels": [],
      "body": "Should the section on [Cookie Lifetime Limits](https://httpwg.org/http-extensions/draft-ietf-httpbis-rfc6265bis.html#section-5.5) be included in this new proposal? I noticed it's missing from the current iteration.",
      "createdAt": "2024-09-25T21:55:28Z",
      "updatedAt": "2024-09-26T16:25:46Z",
      "closedAt": "2024-09-26T16:25:46Z",
      "comments": [
        {
          "author": "johannhof",
          "authorAssociation": "OWNER",
          "body": "cc @sbingler\r\n\r\n@annevk do you know if we decided to remove this for some reason? I don't recall it, but I may be missing something.",
          "createdAt": "2024-09-26T05:35:17Z",
          "updatedAt": "2024-09-26T05:35:17Z"
        },
        {
          "author": "annevk",
          "authorAssociation": "COLLABORATOR",
          "body": "Is this not encoded through [Cookie Store And Limits](https://johannhof.github.io/draft-annevk-johannhof-httpbis-cookies/draft-annevk-johannhof-httpbis-cookies.html#name-cookie-store-and-limits) and their callers?",
          "createdAt": "2024-09-26T12:41:04Z",
          "updatedAt": "2024-09-26T12:41:04Z"
        },
        {
          "author": "johannhof",
          "authorAssociation": "OWNER",
          "body": "Ah, yes, it seems to be. @arichiv any concerns with that? You can see the `cookie age limit` being used in the other algorithms.",
          "createdAt": "2024-09-26T16:15:00Z",
          "updatedAt": "2024-09-26T16:15:00Z"
        },
        {
          "author": "arichiv",
          "authorAssociation": "NONE",
          "body": "LGTM, I missed the new location when skimming before",
          "createdAt": "2024-09-26T16:25:46Z",
          "updatedAt": "2024-09-26T16:25:46Z"
        }
      ]
    },
    {
      "number": 10,
      "id": "I_kwDOL8YrcM6lVe5s",
      "title": "Cookie expiration",
      "url": "https://github.com/johannhof/draft-annevk-johannhof-httpbis-cookies/issues/10",
      "state": "OPEN",
      "author": "roryhewitt",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Your new spec and the original RFC 6265 both specify that the correct way for a server to delete a cookie on the client is to send a `Set-Cookie` response header with the cookie name and an `Expires` value in the past. From your document (**Section 4.1.2 - Semantics - Non-Normative)**):\r\n\r\n\"[...] Notice that servers can delete cookies by sending the user agent a new cookie with an Expires attribute with a value in the past.\"\r\n\r\nThis mechanism is also spelled out in **Section 3.1 - Examples**.\r\n\r\nCan I suggest that the cookie deletion/removal (not sure of which term is preferred) mechanism is 'officially' specified in a 4.1.* section, rather than being relegated to a line within a paragraph in a 'non-normative' section?\r\n\r\nAlso there are plenty of instances where developers _attempt_ to delete/remove a cookie by sending a `Set-Cookie` header with a date in the past, but the date is incorrectly formatted, resulting in the cookie not being deleted. While this is normally fixed quickly, since it's pretty easy for a developer to tell whether the cookie has been deleted on the user-agent, perhaps a 'standard' date could be suggested and documented in this section, e.g. some wording along the lines of the following:\r\n\r\n    To delete a cookie, it is suggested that servers send a Set-Cookie header with the following Expires attribute:\r\n    \r\n    Expires=Sun, 06 Nov 1994 08:49:37 GMT\r\n    \r\n    Using this common date to remove client cookies can make it easier to track cookie removal functionality in your own codebase.",
      "createdAt": "2025-01-07T22:31:02Z",
      "updatedAt": "2025-01-07T22:31:02Z",
      "closedAt": null,
      "comments": []
    }
  ],
  "pulls": [
    {
      "number": 1,
      "id": "PR_kwDOL8YrcM5vqFzM",
      "title": "Add initial draft",
      "url": "https://github.com/johannhof/draft-annevk-johannhof-httpbis-cookies/pull/1",
      "state": "MERGED",
      "author": "johannhof",
      "authorAssociation": "OWNER",
      "assignees": [],
      "labels": [],
      "body": "",
      "createdAt": "2024-05-16T12:09:19Z",
      "updatedAt": "2024-05-24T09:59:07Z",
      "baseRepository": "johannhof/draft-annevk-johannhof-httpbis-cookies",
      "baseRefName": "main",
      "baseRefOid": "62a565aa30b29469fe5d4f2b2cc39cf5fe9a5045",
      "headRepository": "johannhof/draft-annevk-johannhof-httpbis-cookies",
      "headRefName": "johannhof-patch-1",
      "headRefOid": "29f2bb0ef843dafd88f42077604e7438660e8086",
      "closedAt": "2024-05-24T09:59:03Z",
      "mergedAt": "2024-05-24T09:59:03Z",
      "mergedBy": "annevk",
      "mergeCommit": {
        "oid": "4faa81f17f6a4feaad02a850f6100b6c17718f2b"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOL8YrcM57w_yT",
          "commit": {
            "abbreviatedOid": "29f2bb0"
          },
          "author": "annevk",
          "authorAssociation": "COLLABORATOR",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-05-24T09:58:50Z",
          "updatedAt": "2024-05-24T09:58:50Z",
          "comments": []
        }
      ]
    },
    {
      "number": 7,
      "id": "PR_kwDOL8YrcM51xIV6",
      "title": "Correct broken ABNF",
      "url": "https://github.com/johannhof/draft-annevk-johannhof-httpbis-cookies/pull/7",
      "state": "MERGED",
      "author": "annevk",
      "authorAssociation": "COLLABORATOR",
      "assignees": [],
      "labels": [],
      "body": "Apparently the removal of a space behind \"1.\" impacted the ABNF formatting. This could not be fixed by also indenting the ABNF by three instead of four spaces. This single-space fix appears to be the only way to resolve this.\r\n\r\nFixes #2.",
      "createdAt": "2024-07-18T11:41:37Z",
      "updatedAt": "2024-07-18T11:57:54Z",
      "baseRepository": "johannhof/draft-annevk-johannhof-httpbis-cookies",
      "baseRefName": "main",
      "baseRefOid": "ed78db05c2ba68f8f815ab75dc6da1d60a065e06",
      "headRepository": "johannhof/draft-annevk-johannhof-httpbis-cookies",
      "headRefName": "abnf",
      "headRefOid": "2e433d4118beb464afa8566038d72f84d152db4d",
      "closedAt": "2024-07-18T11:57:50Z",
      "mergedAt": "2024-07-18T11:57:50Z",
      "mergedBy": "johannhof",
      "mergeCommit": {
        "oid": "95c6dcb9a0e51f785f87a64d1372a33b7c25e2ee"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOL8YrcM6CRbvV",
          "commit": {
            "abbreviatedOid": "2e433d4"
          },
          "author": "johannhof",
          "authorAssociation": "OWNER",
          "state": "APPROVED",
          "body": "",
          "createdAt": "2024-07-18T11:57:40Z",
          "updatedAt": "2024-07-18T11:57:40Z",
          "comments": []
        }
      ]
    },
    {
      "number": 9,
      "id": "PR_kwDOL8YrcM6E5wXz",
      "title": "Update draft-annevk-johannhof-httpbis-cookies.md",
      "url": "https://github.com/johannhof/draft-annevk-johannhof-httpbis-cookies/pull/9",
      "state": "MERGED",
      "author": "roryhewitt",
      "authorAssociation": "CONTRIBUTOR",
      "assignees": [],
      "labels": [],
      "body": "Clarification changes to section 4.1.2.3 (The Domain attribute)",
      "createdAt": "2024-12-11T19:08:57Z",
      "updatedAt": "2024-12-13T09:09:28Z",
      "baseRepository": "johannhof/draft-annevk-johannhof-httpbis-cookies",
      "baseRefName": "main",
      "baseRefOid": "c69e4deb347da3f28d62ea9055968d715276391c",
      "headRepository": "roryhewitt/draft-annevk-johannhof-httpbis-cookies",
      "headRefName": "patch-1",
      "headRefOid": "4e3126f5395ba034b07de41e2004c87f0d688a26",
      "closedAt": "2024-12-13T09:09:28Z",
      "mergedAt": "2024-12-13T09:09:28Z",
      "mergedBy": "annevk",
      "mergeCommit": {
        "oid": "c0d32e7f98428ba50f329fe9671a3a7a6e1bbed9"
      },
      "comments": [],
      "reviews": [
        {
          "id": "PRR_kwDOL8YrcM6U5bNm",
          "commit": {
            "abbreviatedOid": "4e3126f"
          },
          "author": "annevk",
          "authorAssociation": "COLLABORATOR",
          "state": "COMMENTED",
          "body": "These sections generally need another look over, but this seems like a reasonable clarification.",
          "createdAt": "2024-12-12T07:33:00Z",
          "updatedAt": "2024-12-12T07:33:45Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Is this actually accurate? Origin server seems to imply scheme and port matter, which I'm pretty sure cookies ignore. (You can make them care about scheme, but not by default.)\r\n\r\nMight be a follow-up though.",
              "createdAt": "2024-12-12T07:33:01Z",
              "updatedAt": "2024-12-12T07:33:45Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOL8YrcM6VCuRo",
          "commit": {
            "abbreviatedOid": "4e3126f"
          },
          "author": "roryhewitt",
          "authorAssociation": "CONTRIBUTOR",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-12T18:48:20Z",
          "updatedAt": "2024-12-12T18:48:20Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Perhaps replace `...only to origin server` with `...only to requests from the original domain which sent the Set-Cookie header`. But maybe that's a bit wordy.\r\n\r\nFWIW, I didn't change the `origin server` text in that sentence - I just added the ` and not to any subdomains` bit.",
              "createdAt": "2024-12-12T18:48:20Z",
              "updatedAt": "2024-12-12T18:48:20Z"
            }
          ]
        },
        {
          "id": "PRR_kwDOL8YrcM6VFQ93",
          "commit": {
            "abbreviatedOid": "4e3126f"
          },
          "author": "johannhof",
          "authorAssociation": "OWNER",
          "state": "COMMENTED",
          "body": "",
          "createdAt": "2024-12-13T03:37:51Z",
          "updatedAt": "2024-12-13T03:37:52Z",
          "comments": [
            {
              "originalPosition": 19,
              "body": "Yeah, I suspect \"origin\" here doesn't mean (scheme, host, port) but rather \"where it came from\". That seems worth fixing up, but I wouldn't put it on this PR unless @roryhewitt feels motivated.",
              "createdAt": "2024-12-13T03:37:51Z",
              "updatedAt": "2024-12-13T03:37:52Z"
            }
          ]
        }
      ]
    }
  ]
}